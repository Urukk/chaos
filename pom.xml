<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.chaos</groupId>
  <artifactId>chaos</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <name>chaos</name>
  <description>卡奥斯</description>

  <modules>
    <module>chaos-common</module>
    <module>chaos-base-modules</module>
    <module>chaos-api</module>
  </modules>

  <properties>
    <revision>1.0.0-SNAPSHOT</revision>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring-boot.version>3.1.3</spring-boot.version>
    <!-- jwt -->
    <jwt.version>4.4.0</jwt.version>
    <!-- lombok -->
    <lombok.version>1.18.26</lombok.version>
    <!-- mapstruct -->
    <mapstruct-plus.version>1.3.5</mapstruct-plus.version>
    <mapstruct-plus.lombok.version>0.2.0</mapstruct-plus.lombok.version>
    <!-- 接口文档 -->
    <smartDoc.verison>2.6.9</smartDoc.verison>
    <springdoc.version>1.6.15</springdoc.version>
    <!-- hutool -->
    <hutool.version>5.8.20</hutool.version>
    <!-- alibaba-ttl -->
    <alibaba-ttl.version>2.14.2</alibaba-ttl.version>
    <!-- 插件版本 -->
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
    <maven-compiler-plugin.verison>3.11.0</maven-compiler-plugin.verison>
    <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
  </properties>

  <!--  <profiles>-->
  <!--    <profile>-->
  <!--      <id>devLocal</id>-->
  <!--      <properties>-->
  <!--        &lt;!&ndash; 环境标识，需要与配置文件的名称相对应 &ndash;&gt;-->
  <!--        <profiles.active>devLocal</profiles.active>-->
  <!--        <logging.level>debug</logging.level>-->
  <!--      </properties>-->
  <!--    </profile>-->
  <!--    <profile>-->
  <!--      <id>dev</id>-->
  <!--      <properties>-->
  <!--        &lt;!&ndash; 环境标识，需要与配置文件的名称相对应 &ndash;&gt;-->
  <!--        <profiles.active>dev</profiles.active>-->
  <!--        <logging.level>debug</logging.level>-->
  <!--      </properties>-->
  <!--      <activation>-->
  <!--        &lt;!&ndash; 默认环境 &ndash;&gt;-->
  <!--        <activeByDefault>true</activeByDefault>-->
  <!--      </activation>-->
  <!--    </profile>-->
  <!--    <profile>-->
  <!--      <id>prod</id>-->
  <!--      <properties>-->
  <!--        <profiles.active>prod</profiles.active>-->
  <!--        <logging.level>warn</logging.level>-->
  <!--      </properties>-->
  <!--    </profile>-->
  <!--  </profiles>-->

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- hutool 的依赖配置-->
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-bom</artifactId>
        <version>${hutool.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>${jwt.version}</version>
      </dependency>

      <!-- chaos 的依赖配置-->
      <dependency>
        <groupId>com.chaos</groupId>
        <artifactId>chaos-common-bom</artifactId>
        <version>${revision}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!--      <dependency>-->
      <!--        <groupId>org.springframework.boot</groupId>-->
      <!--        <artifactId>spring-boot-starter-data-redis</artifactId>-->
      <!--      </dependency>-->

      <!--      <dependency>-->
      <!--        <groupId>org.springframework.boot</groupId>-->
      <!--        <artifactId>spring-boot-starter-demo</artifactId>-->
      <!--        <scope>demo</scope>-->
      <!--      </dependency>-->


      <!--      <dependency>-->
      <!--        <groupId>org.springframework.boot</groupId>-->
      <!--        <artifactId>spring-boot-devtools</artifactId>-->
      <!--        <scope>runtime</scope>-->
      <!--        <optional>true</optional>-->
      <!--      </dependency>-->

      <!--      <dependency>-->
      <!--        <groupId>org.flywaydb</groupId>-->
      <!--        <artifactId>flyway-core</artifactId>-->
      <!--      </dependency>-->

      <!--      <dependency>-->
      <!--        <groupId>org.flywaydb</groupId>-->
      <!--        <artifactId>flyway-mysql</artifactId>-->
      <!--      </dependency>-->

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>

      <dependency>
        <groupId>io.github.linpeilie</groupId>
        <artifactId>mapstruct-plus-spring-boot-starter</artifactId>
        <version>${mapstruct-plus.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.shalousun</groupId>
        <artifactId>smart-doc</artifactId>
        <version>${smartDoc.verison}</version>
        <scope>test</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.antlr/antlr4-runtime -->
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>4.10</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>transmittable-thread-local</artifactId>
        <version>${alibaba-ttl.version}</version>
      </dependency>


      <!--      <dependency>-->
      <!--        <groupId>org.springdoc</groupId>-->
      <!--        <artifactId>springdoc-openapi-ui</artifactId>-->
      <!--        <version>${springdoc.version}</version>-->
      <!--      </dependency>-->

      <!-- api模块 -->
      <dependency>
        <groupId>com.chaos</groupId>
        <artifactId>chaos-api</artifactId>
        <version>${revision}</version>
      </dependency>

      <!-- system模块 -->
      <dependency>
        <groupId>com.chaos</groupId>
        <artifactId>chaos-system</artifactId>
        <version>${revision}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.verison}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <annotationProcessorPaths>
            <!--            <path>-->
            <!--              <groupId>com.github.therapi</groupId>-->
            <!--              <artifactId>therapi-runtime-javadoc-scribe</artifactId>-->
            <!--              <version>${therapi-javadoc.version}</version>-->
            <!--            </path>-->
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>${spring-boot.version}</version>
            </path>
            <path>
              <groupId>io.github.linpeilie</groupId>
              <artifactId>mapstruct-plus-processor</artifactId>
              <version>${mapstruct-plus.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${mapstruct-plus.lombok.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!-- 统一版本号管理 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--      &lt;!&ndash; 单元测试使用 &ndash;&gt;-->
      <!--      <plugin>-->
      <!--        <groupId>org.apache.maven.plugins</groupId>-->
      <!--        <artifactId>maven-surefire-plugin</artifactId>-->
      <!--        <version>${maven-surefire-plugin.version}</version>-->
      <!--        <configuration>-->
      <!--          &lt;!&ndash; 根据打包环境执行对应的@Tag测试方法 &ndash;&gt;-->
      <!--          <groups>${profiles.active}</groups>-->
      <!--          &lt;!&ndash; 排除标签 &ndash;&gt;-->
      <!--          <excludedGroups>exclude</excludedGroups>-->
      <!--        </configuration>-->
      <!--      </plugin>-->
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <!-- 关闭过滤 -->
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <!-- 引入所有 匹配文件进行过滤 -->
        <includes>
          <include>application*</include>
          <include>bootstrap*</include>
          <include>banner*</include>
        </includes>
        <!-- 启用过滤 即该资源中的变量将会被过滤器中的值替换 -->
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <repositories>
    <repository>
      <id>public</id>
      <name>huawei nexus</name>
      <url>https://mirrors.huaweicloud.com/repository/maven/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>public</id>
      <name>huawei nexus</name>
      <url>https://mirrors.huaweicloud.com/repository/maven/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>
