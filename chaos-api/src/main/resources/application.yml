## 公共配置

# 项目相关配置
chaos:
  # 名称
  name: chaos
  # 版本
  version: ${revision}
  # 版权年份
  copyrightYear: 2023

#captcha:
#  enable: true
#  # 页面 <参数设置> 可开启关闭 验证码校验
#  # 验证码类型 math 数组计算 char 字符验证
#  type: MATH
#  # line 线段干扰 circle 圆圈干扰 shear 扭曲干扰
#  category: CIRCLE
#  # 数字验证码位数
#  numberLength: 1
#  # 字符验证码长度
#  charLength: 4

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8379
  servlet:
    # 应用的访问路径
    context-path: /chaos-api/
    # undertow 配置
    undertow:
      # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的
      max-http-post-size: -1
      # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
      # 每块buffer的空间大小,越小的空间被利用越充分
      buffer-size: 512
      # 是否分配的直接内存
      direct-buffers: true
      threads:
        # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
        io: 8
        # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
        worker: 256

# security 配置
security:
  ignore:
    urls:
      - /webjars/**
      - /favicon.ico
      - /chaos-api/**

# jwt 配置
auth:
  jwt:
    # 加密密钥
    secret: ewrfwafdasfsdafasdfasdfasserefsdfs
    # 过期时间
    expiration: 604800

# Spring配置
#spring:
#  profiles:
#    active: devLocal
#  # 数据源配置
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    driverClassName: com.mysql.cj.jdbc.Driver
#    hikari:
#      # 最大连接池数量
#      maxPoolSize: 20
#      # 最小空闲线程数量
#      minIdle: 10
#      # 配置获取连接等待超时的时间
#      connectionTimeout: 30000
#      # 校验超时时间
#      validationTimeout: 5000
#      # 空闲连接存活最大时间，默认10分钟
#      idleTimeout: 600000
#      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
#      maxLifetime: 1800000
#      # 连接测试query（配置检测连接是否有效）
#      connectionTestQuery: SELECT 1
#      # 多久检查一次连接的活性
#      keepaliveTime: 30000
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://119.91.199.41:4417/chaos?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: 1qazxsw2@
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      validation-timeout: 5000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
      keepalive-time: 30000
  jpa:
    database: mysql
    show-sql: true
    generate-ddl: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect